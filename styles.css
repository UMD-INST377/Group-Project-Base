* {
  box-sizing: border-box;
}

/* 
  These rules apply to actual HTML elements with no labelling!
  So: they style the tags directly
*/

html {
  background-color: #fff;
  font-size: 16px;
  min-width: 300px;
  overflow-x: hidden;
  overflow-y: scroll;

  /* these are specific to different browsers */
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

body {
  margin: 0;
  padding: 0;

  font-family: ‘Segoe UI’, Candara, ‘Bitstream Vera Sans’, ‘DejaVu Sans’, ‘Bitsream Vera Sans’, ‘Trebuchet MS’, Verdana, ‘Verdana Ref’, sans-serif;
  font-weight: 400;
  line-height: 1.5;
  background-color: rgb(239, 239, 239);
}


a {
  display: inline-block;
  text-decoration: none;
}

h2, h3 {
  margin:0;
  padding:0;
  padding-bottom:1.5rem;
}

form {
  accent-color: hsla(120, 100%, 50%, 0.482);
}

/*
  - These styles use 'class names'
  - You can apply them by using the 'class' attribute on your HTML
  - like this: <div class="wrapper">
  - note that the period vanishes there!
*/

div {
  border: 2px rgba(0, 0, 0, 0.8);

}

.wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0;
  flex: 1;
}

.container {
  margin: 0 20px;
  display: flex;
  justify-content: space-evenly;
  align-items: start;
  flex:1;
}

.header {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 1.5rem;
}


/*
  This rule implies that the H1 tag lives within another HTML tag
  It "inherits" some rules from the above
  Those rules won't apply to an h1 that's outside a block with the class of 'header'
*/

.header h1 {
  display: block;
  /* this will push other blocks out of the way */

  /* colors */
  background-color: #735d78;
  color: #f7d1cd;

  /* shapes */
  border-radius: 10px;
  font-size: 1.5rem;
  padding: 1.25rem;
  margin:0; /* removing the margin on h1 tags means the header pins to the top if we move */


  /* box-shadows are fancy */
  box-shadow: 0 0.5em 1em -0.125em rgba(148, 126, 126, 0.1), 0 0 0 1px rgb(10 10 10 / 2%);
}


/*
  Rules can be combined on a block to apply the 'cascade' in order
  So you can use two classnames in a single class attribute
  like: <div class="box section">

  Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
  And will be what displays in your client
*/



.box {
  background-color: #f7d1cd;
  border-radius: 10px;

  width: fit-content;
  height:fit-content;
  padding: 1.5rem;
}

.left_section {
  background-color: #d1b3c4;
  flex: 0 1 auto;
  margin: 1rem;
  padding: 1.5rem;
  box-shadow: 0 0.5em 1em -0.125em rgba(148, 126, 126, 0.1), 0 0 0 1px rgb(10 10 10 / 2%);
}

.right_section {
  background-color: #b392ac;
  flex: 1 2 auto;
  margin: 1rem;
  align-items: center;
  justify-content: center;
  max-width: 450px;
  display:flex;
  flex-direction: column;
  box-shadow: 0 0.5em 1em -0.125em rgba(148, 126, 126, 0.1), 0 0 0 1px rgb(10 10 10 / 2%);
}

/*
  This block is actually dependent on the "container" block having a flex set on it
  and the "wrapper" block displaying as a flex column with a "vertical height" (vh) of 100.
  That serves to cram the footer to the bottom of the page.
*/

.footer {
  flex-shrink: 0;
  padding: 1rem;
  background-color: rgba(0, 139, 139, 0.8);
  font-size: 1.2rem;
  font-weight: 600;
}

.footer a {
  color: rgba(255, 224, 138, 1);
  text-decoration: underline;
}

/*
  This is an example of a 'pseudoclass'
  In this instance, it says what to do if a mouse hovers over a link
  This is pretty desktop-specific, since there's no hover function on touchscreens
*/
.footer a:hover {
  /* Hue, saturation, luminosity, alpha */
  background-color: hsla(0, 0%, 90%, 0.15);
  /* red, green, blue, alpha */
  color: rgb(246, 169, 93);
  text-decoration: none;
}

.subtitle {
  color: rgba(0, 0, 0, 0.8);
  margin: 0px;
  margin-bottom: 5px;
}


/* Deploy this with images as direct "children" and the images should pop into shape */
.grid {
  display: flex;
  justify-content: space-evenly;
  flex-flow: wrap;
  width: 350px;
  height: 350px;
  margin: 0 auto;
}

.grid img {
  width: 150px;
  height: 150px;
}


/* Carousel */
div.carousel {
  max-width: 300px;
  overflow: hidden;
  text-align: center;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  margin: 0 auto;
  margin-bottom: 1rem;
}

.carousel .slides {
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}

/* .carousel_item, */
.hidden {
  display: none;
}

.visible {
  display: block;
}

.carousel_item img {
  /* 
    Setting width, rather than max-width or min-width,
    means annoying pop-ins won't happen
    but it also means you need to format your images to be compatible
    or they will stretch weird

    - try a tall one and see what happens
    - change the height on a fixed image size and see what happens
    - now make sure that images are _always_ square
    - ... there's a reason crop tools are popular in image editors
   */
   
   width: 150px; 
}

.prev,
.next {
  border: none;
  margin: 2px;
  text-align: center;
  border-radius: 10px;
  font-weight: bold;
  height: 45px;
  padding: 10px;
  line-height: 0; /* This centers a button's text! */
  border: 2px solid rgb(99,99,99); /* shorthand for how to do a border */
}

.prev:focus,
.next:focus {
  margin: 0;
  border: 2px solid rgb(176, 80, 146);
  /* Pick a good border colour and check out how it works with your buttons */
}

.prev:hover,
.next:hover {
  color: rgb(176, 80, 146);
  /* Pick a good background colour for your hover pseudoclass */
}


/*
Form Styles
*/

form input {
    /* This is a hack to make sure our boxes line up with one another nicely */
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;

    /* here we are setting white space correctly */
    margin-bottom: 1rem;
    height: 2rem;
    border-radius: 10px;
  }

  form label {
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
    align-items: flex-start;

    display: block; /* this turns the label text into a box we can set margins on */
    margin-bottom: 0.5rem;
  }

/* How To Write A Media Query For Small Screens */

@media only screen and (max-width: 736px){
    /* Rules in here will only apply when a screen is the correct size */
    /* check it out by using your developer tools to shrink your screen-size */
    .container {
      background-color: #b392ac;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
    
    .right_section {
      background-color: #e8c2ca;
      flex: 1 2 auto;
      margin: 1rem;
      align-items:flex-start;
      justify-content:flex-start;
      max-width: 450px;
      display:flex;
      flex-direction: column;
  }
}

#map {
  display: block;
  width: 400px;
  height: 380px;
  border: 2px rgb(0, 0, 0);
  margin-bottom: 1rem;
}


/* 
    New code bonus: pure CSS data loading icon
    This comes from loading.io/css - it's nice to show that something is happening!
*/

/* Dropdown Button */
.dropbtn {
  background-color: #63215d;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  border-radius: 10px;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
  position: relative;
  display: inline-block;
  border-radius: 10px;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f1f1f1;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #ddd;}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {display: block;}

/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {background-color: #692e7a;}