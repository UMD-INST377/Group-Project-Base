
* {
  box-sizing: border-box;
}

html {
  background-color: #fff;
  font-size: 16px;
  min-width: 300px;
  overflow-x: hidden;
  overflow-y: scroll;

  /* these are specific to different browsers */
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

body {
  margin: 0;
  padding: 0;

  font-family: ‘Segoe UI’, Candara, ‘Bitstream Vera Sans’, ‘DejaVu Sans’, ‘Bitsream Vera Sans’, ‘Trebuchet MS’, Verdana, ‘Verdana Ref’, sans-serif;
  font-weight: 400;
  line-height: 1.5;
  background-color: rgb(239, 239, 239);
}


a {
  display: inline-block;
  text-decoration: none;
}

h2,h3 {
  margin:0;
  padding:0;
  padding-bottom:1.5rem;
}

form {
  accent-color: hsla(198, 77%, 73%, 0.482);
}


.wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0;
  flex: 1;
}

.container {
  margin: 0 20px;
  display: flex;
  justify-content: space-evenly;
  align-items: start;
  flex:1;
}

.header {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 1.5rem;
}

.header h1 {
  display: block;
  background-color: rgba(244, 242, 123, 0.781);
  color: #4a4a4a;

  /* shapes */
  border-radius: 6px;
  font-size: 1.5rem;
  padding: 1.25rem;
  margin:0; /* removing the margin on h1 tags means the header pins to the top if we move */


  /* box-shadows are fancy */
  box-shadow: 0 0.5em 1em -0.125em rgba(93, 242, 6, 0.1), 0 0 0 1px rgb(10 10 10 / 2%);
}


/*
  Rules can be combined on a block to apply the 'cascade' in order
  So you can use two classnames in a single class attribute
  like: <div class="box section">

  Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
  And will be what displays in your client
*/

.box {
  background-color: rgba(153, 246, 224, 0.652);
  border: 2px dashed;
  border-radius: 4px;

  width: fit-content;
  height:fit-content;
  padding: 1.5rem;
  margin: 0 auto;
}

.left_section {
  background-color: rgba(139, 175, 237, 0.8);
  flex: 0 1 auto;
  margin: 1rem;
  padding: 1.5rem;
}

.right_section {
  background-color: rgba(151, 151, 238, 0.7);
    flex: 1 2 auto;
    margin: 1rem;
    align-items: center;
    display: flex;
    flex-direction: column;
}

.footer {
  flex-shrink: 0;
  padding: 1rem;
  background-color: rgba(245, 248, 140, 0.8);
  font-size: 1.2rem;
  font-weight: 600;
}

.footer a {
  color: rgb(196, 152, 7);
  text-decoration: underline;
}



form input {
    /* This is a hack to make sure our boxes line up with one another nicely */
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;

    /* here we are setting white space correctly */
    margin-bottom: 1rem;
    height: 2rem;
    border-radius: 4px;
  }

form label {
  width: 100%;
  width: -moz-available;          /* WebKit-based browsers will ignore this. */
  width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
  width: fill-available;
  align-items: flex-start;

  display: block; /* this turns the label text into a box we can set margins on */
  margin-bottom: 0.5rem;
}

/* How To Write A Media Query For Small Screens */

@media only screen and (max-width: 736px){
    .container {
      background-color: rgba(227, 242, 153, 0.65);
      flex-direction: column;
      align-items: center;
    }
    .right_section {
      background-color: rgba(151, 151, 238, 0.7);
        flex: 1 2 auto;
        margin: 1rem;
        align-items: flex-start;
        display: flex;
        flex-direction: column;
    }
}

  
  .chart_container {
      height: 100%;
      width: 100%;
  }